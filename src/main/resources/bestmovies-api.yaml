openapi: 3.0.0

info:
  version: 0.0.1
  title: Best Movies Service
  description: The Best Movies Service

tags:
  - name: "User"
  - name: "Movie"
  - name: "Star"

paths:

  /user/login:
    post:
      parameters:
        - name: username
          in: query
          description: Username of the user
          schema:
            type: string
        - name: password
          in: query
          description: Password of the user
          schema:
            type: string
      summary: This is summary
      tags:
        - "User"
      description: Used to login
      operationId: Login
      responses:
        "200":
          description: This means it is ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /user/register:
    post:
      parameters:
        - name: email
          in: query
          description: Email of the user
          schema:
            type: string
        - name: username
          in: query
          description: Username of the user
          schema:
            type: string
        - name: password
          in: query
          description: Password of the user
          schema:
            type: string
      summary: This is summary
      tags:
        - "User"
      description: Used to register the user
      operationId: Register
      responses:
        "200":
          description: This means it is ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /movie/myMovieList:
    post:
      summary: This is summary
      tags:
        - "Movie"
      description: Used to register the user
      operationId: myMovieList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Movie'
      responses:
        "200":
          description: This means it is ok

    get:
      summary: This is summary
      tags:
        - "Movie"
      description: Used to register the user
      operationId: getMyMovieList
      responses:
        "200":
          description: This means it is ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'

    put:
      summary: This is summary
      tags:
        - "Movie"
      description: Used to register the user
      operationId: addMovieToMyList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        "200":
          description: This means it is ok

  /movies:
    get:
      summary: This is summary
      tags:
        - "Movie"
      description: Used to register the user
      operationId: getMovies
      responses:
        "200":
          description: This means it is ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'

  /stars:
    get:
      summary: This is summary
      tags:
        - "Actor"
      description: Used to register the user
      operationId: getStars
      responses:
        "200":
          description: This means it is ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Star'

  /star:
    get:
      summary: This is summary
      parameters:
        - name: starID
          in: query
          description: Email of the user
          schema:
            type: string
      tags:
        - "Actor"
      description: Used to register the user
      operationId: getStar
      responses:
        "200":
          description: This means it is ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Star'


components:

  schemas:

    User:
      description: This is a user model
      type: object
      properties:
        userID:
          type: integer
        email:
          type: string
        password:
          type: string
        username:
          type: string

    Movie:
      type: object
      properties:
        movieID:
          type: integer
        title:
          type: string
        year:
          type: integer

    Review:
      type: object
      properties:
        reviewContent:
          type: string
        userID:
          type: integer
        movieID:
          type: integer

    Rating:
      type: object
      properties:
        rating:
          type: number
        votes:
          type: integer
        movieID:
          type: integer

    Human:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        birth:
          type: integer
        movieID:
          type: integer
      oneOf:
        - $ref: '#/components/schemas/Star'
        - $ref: '#/components/schemas/Director'

    Director:
      type: object

    Star:
      type: object